# AI Bug Bounty Framework - Enhanced HexStrike Container
# Based on HexStrike AI with 150+ security tools
# MITRE ATT&CK integrated

FROM kalilinux/kali-rolling

# Environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PATH=$PATH:/usr/local/go/bin:/root/go/bin

# Update and install base packages
RUN apt-get update && apt-get install -y \
    curl wget git python3 python3-pip \
    build-essential golang-go \
    nmap masscan \
    sqlmap nikto dirb gobuster \
    hydra john hashcat \
    binwalk exiftool \
    dnsutils whois netcat-traditional \
    && rm -rf /var/lib/apt/lists/*

# Install Go security tools
RUN go install github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest && \
    go install github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest && \
    go install github.com/projectdiscovery/httpx/cmd/httpx@latest && \
    go install github.com/projectdiscovery/katana/cmd/katana@latest && \
    go install github.com/projectdiscovery/naabu/v2/cmd/naabu@latest && \
    go install github.com/projectdiscovery/dnsx/cmd/dnsx@latest && \
    go install github.com/projectdiscovery/chaos-client/cmd/chaos@latest && \
    go install github.com/tomnomnom/waybackurls@latest && \
    go install github.com/tomnomnom/gf@latest && \
    go install github.com/tomnomnom/httprobe@latest && \
    go install github.com/tomnomnom/assetfinder@latest && \
    go install github.com/ffuf/ffuf@latest && \
    go install github.com/OJ/gobuster/v3@latest

# Install additional Python tools
RUN pip3 install --no-cache-dir \
    requests beautifulsoup4 colorama \
    dirsearch arjun paramspider \
    sublist3r knockpy dnsgen \
    wafw00f whatweb builtwith \
    shodan censys ipwhois \
    python-nmap python-masscan

# Install additional tools via apt
RUN apt-get update && apt-get install -y \
    amass fierce dnsrecon theharvester \
    wfuzz feroxbuster dirbuster \
    burpsuite zaproxy \
    metasploit-framework \
    && rm -rf /var/lib/apt/lists/*

# Create workspace
WORKDIR /app
RUN mkdir -p /app/{wordlists,results,tools,mitre}

# Download comprehensive wordlists
RUN git clone https://github.com/danielmiessler/SecLists.git /app/wordlists/SecLists && \
    wget -O /app/wordlists/common.txt \
    https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/common.txt

# Copy security bridge
COPY security_bridge.py /app/
COPY simple_mcp.py /app/

# Create MITRE ATT&CK mapping
RUN cat > /app/mitre/attack_mapping.json << 'EOF'
{
  "reconnaissance": {
    "T1590": "Gather Victim Network Information",
    "T1595": "Active Scanning"
  },
  "initial_access": {
    "T1190": "Exploit Public-Facing Application",
    "T1133": "External Remote Services"
  },
  "discovery": {
    "T1046": "Network Service Scanning",
    "T1083": "File and Directory Discovery"
  }
}
EOF

# Enhanced startup script
RUN cat > /app/start.sh << 'EOF'
#!/bin/bash
echo "ðŸš€ AI Bug Bounty Framework - Enhanced Container"
echo "ðŸŽ¯ MITRE ATT&CK Integration Active"
echo "ðŸ”§ HexStrike AI Enhanced (150+ Tools)"
echo "ðŸ¤– Amazon Q Ready"
echo "================================================"

# Tool verification
echo "Core Tools Status:"
which nmap > /dev/null && echo "âœ“ Nmap" || echo "âœ— Nmap"
which nuclei > /dev/null && echo "âœ“ Nuclei" || echo "âœ— Nuclei"
which subfinder > /dev/null && echo "âœ“ Subfinder" || echo "âœ— Subfinder"
which gobuster > /dev/null && echo "âœ“ Gobuster" || echo "âœ— Gobuster"
which httpx > /dev/null && echo "âœ“ Httpx" || echo "âœ— Httpx"
which sqlmap > /dev/null && echo "âœ“ SQLMap" || echo "âœ— SQLMap"
which ffuf > /dev/null && echo "âœ“ FFUF" || echo "âœ— FFUF"
which amass > /dev/null && echo "âœ“ Amass" || echo "âœ— Amass"

echo "================================================"
echo "ðŸŽ¯ MITRE ATT&CK Commands Available:"
echo "python security_bridge.py mitre_attack_chain <target>"
echo "python security_bridge.py nmap_scan <target>"
echo "python security_bridge.py nuclei_scan <target>"
echo "================================================"

# Keep container running
python3 -m http.server 8888 --directory /app
EOF

RUN chmod +x /app/start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8888 || exit 1

# Expose port
EXPOSE 8888

# Labels
LABEL version="3.1" \
      description="AI Bug Bounty Framework - Enhanced HexStrike Container" \
      maintainer="AI Bug Bounty Framework Team" \
      mitre="ATT&CK Integrated"

# Start
CMD ["/app/start.sh"]